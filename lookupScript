pipeline {
    parameters {
        choice(name: 'InstanceURL', choices: ['DEV', 'UAT', 'PROD'], description: 'Select the instance URL')
        string(description: 'Lookup file names (comma-separated)', name: 'fileNames')
    }
    agent any
    stages {
        stage('Execution') {
            steps {
                script {
                    def instanceURL
                    def username
                    def password
                    switch (params.InstanceURL) {
                        case 'DEV':
                            instanceURL = 'https://testinstance-idevjxz332qf-ia.integration.ocp.oraclecloud.com'
                            username = 'Devops_user'
                            password = 'Oic_Jenkins#2023'
                            break
                        case 'UAT':
                            instanceURL = 'http://example.com/url2'
                            username = 'username1'
                            password = 'password1'
                            break
                        case 'PROD':
                            instanceURL = 'http://example.com/url3'
                            username = 'username1'
                            password = 'password1'
                            break
                        default:
                            echo 'Invalid instance URL'
                            return
                    }
                    def files = params.fileNames.split(',')
                    
                    for (int i = 0; i < files.size(); i++) {
                        def fileName = files[i].trim()
                        
                        if (fileName) {
                            // Execute curl command for each lookup file name
                            bat """
                                curl -X POST --user ${username}:${password} -F "file=@${fileName}" -F "type=application/octet-stream" ${instanceURL}/ic/api/integration/v1/lookups/archive
                            """
                        }
                    }
                }
            }
        }
    }
}
